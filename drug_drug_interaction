library("ggplot2")
library("reshape")

setwd("C:/DDM/Hw2")
#Read the frequencies file
drug_data=read.csv("single_drug_event_frequencies.csv",header=TRUE,as.is=T)
#Read the list of cholestrol drugs
chol_drug=scan(file="cholesterol_drugs.txt",what=character(),sep="\n")
#Find the list of events that have at least one cholesterol drug against. Confirm count is 2600
adv_event=unique(drug_data[drug_data$singlet %in% chol_drug,]$event)

#Housekeeping
iterator=1
count=1
fishcount=1
ttest=NULL
wiltest=NULL
fishtest=NULL

n=501

#data frames to capture the output from different tests
ttest_event=data.frame(event=rep("", n),pval=rep(NA, n),meanchol=rep(NA, n),meanother=rep(NA, n),stringsAsFactors=FALSE)
wiltest_event=data.frame(event=rep("", n),pval=rep(NA, n),meanchol=rep(NA, n),meanother=rep(NA, n),stringsAsFactors=FALSE)
fishtest_event=data.frame(event=rep("", n),pval=rep(NA, n),oddsratio=rep(NA, n),stringsAsFactors=FALSE,meanchol=rep(NA, n),meanother=rep(NA, n))
freq_table=data.frame(event=rep("", n),freq_bin1=rep(NA, n),freq_bin2=rep(NA, n))

while(iterator<=length(adv_event))
{
	drug_event_data=NULL
	drug_adv_event=NULL
	temp_drug_vector=NULL
	
	#Find the rows for specific event
	drug_event_data=drug_data[drug_data$event==adv_event[iterator],]
	#All drugs associated with the event
	drug_adv_event=unique(drug_event_data$singlet)
	#Fetch the cholesterol drugs
	temp_drug_vector=drug_adv_event %in% chol_drug*1
	
	#Set up data for contingency table
	fisher_data=drug_event_data
	fisher_data$singlet[fisher_data$singlet %in% chol_drug]='C'
	fisher_data$singlet[fisher_data$singlet!="C"]='O'
	fish_mean_chol=mean(fisher_data[fisher_data$singlet=='C',3])
	fish_mean_other=mean(fisher_data[fisher_data$singlet=='O',3])
	fisher_data$freq[as.numeric(fisher_data$freq)>0.01]='G'
	fisher_data$freq[fisher_data$freq!="T" & as.numeric(fisher_data$freq)<=0.01]='L'
	#contingency table to be used as parameter in the fisher test
	cont_table=table(fisher_data$singlet,fisher_data$freq)
			
	if(dim(cont_table)[[2]]>1 & sort(unique(cont_table))[1]>0)
	{
		fishtest=fisher.test(cont_table)
		#capture the p-value and odds ratio
		fishtest_event[fishcount,]=c(adv_event[iterator],sapply(fisher.test(cont_table),unlist)$p.value,as.numeric(sapply(fisher.test(cont_table),unlist)$estimate),fish_mean_chol,fish_mean_other)
		fishcount=fishcount+1
	}

	#check if the event is associated with atleast 5 cholesterol drugs and 5 other drugs
	if(sum(temp_drug_vector)>=5 & (length(temp_drug_vector)-sum(temp_drug_vector))>=5)
	{
		#capture the pvalue, mean values
		ttest=sapply(t.test(drug_event_data[drug_event_data $singlet %in% chol_drug,3],drug_event_data[!(drug_event_data $singlet %in% chol_drug),3]),unlist)
		ttest_event[count,]=c(adv_event[iterator],ttest$p.value,mean(drug_event_data[drug_event_data $singlet %in% chol_drug,3]),mean(drug_event_data[!(drug_event_data $singlet %in% chol_drug),3]))
		
		#capture the pvalue, mean values
		wiltest=sapply(wilcox.test(drug_event_data[drug_event_data $singlet %in% chol_drug,3],drug_event_data[!(drug_event_data $singlet %in% chol_drug),3],conf.int = TRUE),unlist)
		wiltest_event[count,]=c(adv_event[iterator],wiltest$p.value,mean(drug_event_data[drug_event_data $singlet %in% chol_drug,3]),mean(drug_event_data[!(drug_event_data $singlet %in% chol_drug),3]))
		
		count=count+1
	}
	iterator=iterator+1
}

#sort the test results by p values
ttest_event=ttest_event[order(as.numeric(ttest_event$pval)),]
wiltest_event=wiltest_event[order(as.numeric(wiltest_event$pval)),]
fishtest_event=fishtest_event[order(as.numeric(fishtest_event$pval)),]

#Enriched and Diminished events for t-test
ttest_enrich=ttest_event[ttest_event$meanchol>ttest_event$meanother,]
ttest_diminish=ttest_event[ttest_event$meanchol<ttest_event$meanother,]

ttest_enrich[1:10,]
ttest_diminish[1:10,]

#Enriched and Diminished events for wil-test
wiltest_enrich=wiltest_event[wiltest_event$meanchol>wiltest_event$meanother,]
wiltest_diminish=wiltest_event[wiltest_event$meanchol<wiltest_event$meanother,]

wiltest_enrich[1:10,]
wiltest_diminish[1:10,]

#Enriched and diminished events for Fisher Test
fishtest_event_enrich=fishtest_event[fishtest_event$meanchol>fishtest_event$meanother,]
fishtest_event_diminish=fishtest_event[fishtest_event$meanchol<fishtest_event$meanother,]

fishtest_event_enrich[1:10,]
fishtest_event_diminish[1:10,]

#plots
ggplot(data.frame(event=drug_data[drug_data$event==wiltest_enrich[1:2,1],]$event,freq=drug_data[drug_data$event==wiltest_enrich[1:2,1],]$freq), aes(x=freq,color=event)) + geom_density()
ggplot(data.frame(event=drug_data[drug_data$event==wiltest_diminish[1:2,1],]$event,freq=drug_data[drug_data$event==wiltest_diminish[1:2,1],]$freq), aes(x=freq,color=event)) + geom_density()

plot(fishtest_event[,3],fishtest_event[,2],xlab="odds ratio", ylab="pval")

#Logistic Regression Model
glm_data=drug_data[drug_data$event %in% fishtest_event[1:5,]$event,]
drug_dump=data.frame(singlet=unique(drug_data[!(drug_data$singlet %in% unique(glm_data$singlet)),1]),event=rep(""),freq=rep(0))
glm_data=rbind(glm_data,drug_dump)
glm_data=cast(glm_data,singlet~event,value='freq',fill=0)
glm_data=cbind(glm_data,data.frame(chol_flag=rep('N',2574)))
levels(glm_data$chol_flag)=c('N','Y')
glm_data$chol_flag[glm_data$singlet %in% chol_drug]='Y'
glm_data=glm_data[,c(1,3,4,5,6,7,8)]
colnames(glm_data)=c("singlet","blood_creat","blood_increased","muscle_spasm","muscular_weak","rhab","chol_flag")
m=glm(chol_flag~blood_creat+blood_increased+muscle_spasm+muscular_weak+rhab, family= binomial(link = "logit"), data=glm_data)

#Load and prep the validation data
drug_val_data=read.csv("single_drug_event_frequencies_validation.csv",header=TRUE,as.is=T)
glm_val_data=drug_val_data[drug_val_data$event %in% fishtest_event[1:5,]$event,]
drug_val_dump=data.frame(singlet=unique(drug_val_data[!(drug_val_data$singlet %in% unique(glm_val_data$singlet)),1]),event=rep(""),freq=rep(0))
glm_val_data=rbind(glm_val_data,drug_val_dump)
glm_val_data=cast(glm_val_data,singlet~event,value='freq',fill=0)
glm_val_data=cbind(glm_val_data,data.frame(chol_flag=rep(0,2574)))
levels(glm_val_data$chol_flag)=c(0,1)
glm_val_data$chol_flag[glm_val_data$singlet %in% chol_drug]=1
glm_val_data=glm_val_data[,c(1,3,4,5,6,7,8)]
colnames(glm_val_data)=c("singlet","blood_creat","blood_increased","muscle_spasm","muscular_weak","rhab","chol_flag")

#Apply the model
glm_pred_data=predict(m,glm_val_data[,1:6],type="response")

#ROC Curve
pseq=seq(from=0.000, to=1.000, by=0.001)

iterator=1
roc_table=data.frame(prob=rep(0.000, 1000),tpr=rep(0.00, 1000),fpr=rep(0.00, 1000))
glm_obs_data=glm_val_data[,7]

while(iterator<=1001)
{
	temp=glm_pred_data
	temp[temp>=pseq[iterator]]=1
	temp[temp<pseq[iterator]]=0
	
	cont=table(temp,glm_obs_data)
	if(dim(cont)[1]>1)
	{
		tpr=cont[2,2]/(cont[1,2]+cont[2,2])
		fpr=cont[2,1]/(cont[1,1]+cont[2,1])
	}
	
	else
	{
		if(unique(temp)==1)
		{
			tpr=1
			fpr=1
		}
		else
		{
			tpr=0
			fpr=0
		}
		
	}
		roc_table[iterator,]=c(pseq[iterator],tpr,fpr)
	iterator=iterator+1
}

plot(roc_table[,3],roc_table[,2],xlab="FPR",ylab="TPR")
lines(roc_table[,3],roc_table[,2])

#Area under the ROC curve
trapezoid <- function(x,y) sum(diff(x)*(y[-1]+y[-length(y)]))/2 
trapezoid(1-roc_table[,3],roc_table[,2])

#Load the drug pair data
pair_drug_data=read.csv("pair_drug_event_frequencies.csv",header=TRUE,as.is=T)
pair_drug_data=pair_drug_data[pair_drug_data$event %in% fishtest_event[1:5,]$event,]
pair_drug_data=cast(pair_drug_data,pair~event,value='freq',fill=0)
unique(pair_drug_data$pair)


iterator=1
rem_drug_pair=NULL
rem_count=1
while(iterator<=nrow(pair_drug_data))
{
	count=1
	chol_ind=0
	while(count<=38 & chol_ind==0)
	{
		if(length(grep(chol_drug[count],pair_drug_data[iterator,1]))>0)
		{
			chol_ind=1
		}
		count=count+1
	}
	if(chol_ind==1)
	{
		rem_drug_pair[rem_count]=pair_drug_data[iterator,1]
		rem_count=rem_count+1
	}
	iterator=iterator+1
}
pair_drug_data=pair_drug_data[!(pair_drug_data$pair %in% rem_drug_pair),]
colnames(pair_drug_data)=c("pair","blood_creat","blood_increased","muscle_spasm","muscular_weak","rhab")

#Apply the model
pair_pred_data=predict(m,pair_drug_data[,1:6],type="response")
pair_drug_data$chol_sim=pair_pred_data>0.009
pair_drug_data=pair_drug_data[pair_drug_data$chol_sim==TRUE,]
write.table(pair_drug_data,file="ps2_problem3.tsv",sep="\t")

drug_interact_data=read.csv("va_drug_drug_interactions.csv",header=TRUE, as.is=T)

drug_interact_data$pair1 <- do.call(paste, c(drug_interact_data[c("drug1", "drug2")], sep = ","))
drug_interact_data$pair2 <- do.call(paste, c(drug_interact_data[c("drug2", "drug1")], sep = ","))

drug_interact_data[drug_interact_data$pair1 %in% pair_drug_data$pair,]
